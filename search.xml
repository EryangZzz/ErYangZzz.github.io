<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[认识python]]></title>
    <url>%2F2018%2F11%2F19%2Fpython01%2F</url>
    <content type="text"><![CDATA[Day011.认识pythonprint（）在控制台打印出括号的内容，print 和后面的括号是固定写法,括号内内容是变化的注意：代码中的符号必须是英文状态下输入的符号，例如：hellp world欢迎来到编程世界12print("hellp world")print("欢迎来到编程世界") 常用快捷键适用于任何位置，编程中为注释code前后个三个单引号，注释多行代码或者长代码ctrl + / 添加注释或者取消注释ctrl + s 保存ctrl + b 编译ctrl + r 执行ctrl + c 拷贝ctrl + v 黏贴ctrl + x 剪切ctrl + z 撤销ctrl + shift + y /ctrl + y 反撤销ctrl + f 查找ctrl + a 全选ctrl + n 新建一个没有命名的文件shift / ctrl 选中部分 2.python基础语法1.注释:写在代码中，不参与编译执行的部分作用：对代码进行注释说明的，方便更好的阅读代码注意：要勤写注释，方便自己也方便别人 a.单行注释：在文本内容的前面+# 我是单行注释 b.多行注释（尽量使用#进行注释）#####每一行前都加一个#号123'''我是多行注释我是注释1我是注释2''' 将注释内容放在三个单引号或者双引号中推荐使用双引号 123456789"""我是多行注释1我是多行注释2"""'''我是多行注释1我是多行注释2''' 2.标识符标识符是用来命名的（比如变量名、函数名、类名） 要求： a.由字母、数字和下划线组成，并且数字不能开头 Python2.xb.在Unicode编码中除了ASCII码表中的字母、数字、下划线 python3.x以外的符号不能作为标识符一部分，其他都可以，数字不能开头简要意思：字母、数字、下划线、中文都可以作为标识符，数字不能开头推荐使用python2.x的规范1234num = 100一百 = 100# 1abc = 100 数字开头报错SyntaxErrorprint(一百) 3.语句C/Java语法，每条语句结束必须加分号。python中可以加分号，也可以不加，如果要一行显示多句语句,那么就必须加分号1print("Hello, python");print("Hello, world") 4.行和缩进python中对缩进由严格规范，要求同样等级的代码对于的缩进必须一致12345print(123)print(345)# print(123)# print(345) 这样写是报错unexpected indent（意外缩进），只有需要代码块才加缩进 行：格式要求函数的声明和类的声明的前后需要有两个空行5.多行显示问题a.需要换行的位置加反斜杠，然后再换行，注意\不要去破坏数据本身123sum1 = 282828 + 92922 +\29print(sum1) b.如果是数组、字典、元组和集合的值可以直接换行12345num =[12, 89, 90, 88, 87, 22]print(num) 6.常见数据类型及其字面量整型（int）、浮点型（float）、布尔（nool）、字符串（str）、列表（list）、字典（dict）、元组（tuple）、集合（set）等整型（int）相当于数学中的整数，例如：100、-20、+10浮点型（float） 带小数点的数，例如：3.14 、-1.0 、+3.3布尔（bool） 只有两个值 True（真）、False（假）字符串（str） 用单引号或者双引号括起来的数据，例如：”100”、”我是字符串” 关键字：又叫保留字，在python中有特殊功能和特殊意义的一些标识符，一般是一些单词123456import keywordprint(keyword.kwlist)KW = ['False', 'None', 'True', 'and', 'as', 'assert', 'break', 'class', 'continue', 'def','del', 'elif', 'else', 'except', 'finally', 'for', 'from', 'global', 'if', 'import','in', 'is', 'lambda', 'nonlocal', 'not', 'or', 'pass', 'raise', 'return', 'try', 'while', 'with', 'yield'] 注意：上面KW列表中的才是关键字，其他的都不是 3. python中的数字类型有四个：不同的类型在存储数据中所占的内存不一样整型(int)、浮点型(float)、布尔(bool)、复数(complex)整型(int):包含python所有的整数，python3.x整型只有int型一种，但是python2.x中还有Long1234100123-78+78 浮点型(float):包含python中所有的小数，注意：浮点型支持科学计数法12345613.12.895.20+6.66-123print(12e2) # 12 * 10^2 1200.0print(12e-3) # 12 * 10^(-3) 0.012 布尔(bool)：布尔类型的值只有两个，True、False注意：首字母大写，布尔值还是关键字123print(True + 0) # 1print(False + 0) # 0print(False + True) # 1 复数(complex):由实数和虚数组成的数字15 + 10j 4. type()：获取括号中数据的类型1234print(type(True))print(type(10j))print(type(100))print(type(12e9)) 5. 类型名（）：将其他类型的数据转换成当前类型123print(int(3.1415926))print(float(666))print(bool(10)) print(int(12 + 5j)) 复数不能转换为其他数字类型，任何数字类型都能转换为bool类型，复数类型不能转换为整型、浮点型。6. 什么是变量变量就是程序在内存中存储数据的容器，声明变量，就是在内存中开辟空间存储数据7. 怎么定义(声明)变量C/Java声明变量： 类型 变量名 = 10;python赋值(声明)： 变量名 = 初始值变量名 = 初始值说明：a. 变量名：程序员自己命名要求:变量名就是标识符，并且不能是关键字规范:所有的字母必须是小写，如果变量名由多个单词组成，多个单词之间用下划线隔开看见变量名要知道大概存储的是什么数据（见名知义）b. =:赋值符号功能：将=右边的值赋给左边的变量c. 初始值：值或者有值的表达式（具体的字面量、已经声明过的变量）声明一个变量number并且赋值为10012345number = 100print(number)# True =12.4 报错SyntaxError:can't assign to keyword# 1abc = True 报错SyntaxError:invalid syntax 声明一个变量student_name，赋值给小明12student_name = "小明"print(student_name) 注意：虽然int、float、bool、str等不是关键字，但是在需要命名的时候最好不要用他们来命名，否则会改变他们原来的功能1234int = 100print(int)int(89.0)help(int) 8. 声明完变量可以给变量重新赋值12student_name = "小花"print(student_name) 在python中，同一个变量可以存储不同类型的值12student_name = 100print(student_name) 9. 同时声明多个变量变量名1 = 变量名2 = 变量名3 = 初始值12a = b = c = 123print(a,b,c) # 同时打印多个数据，多个数据之间用逗号隔开 将变量student_name中的值赋给new_name1new_name = sutdent_name 注意，变量只有在赋完值之后才能使用（只有声明后才能使用）123print(new_name2) 报错没有声明，definedNameError:name'new_name2' is not age = 18age += 1 10. python中的运算符：数学运算符、比较运算符、逻辑运算符、赋值运算符、位运算1. 数学运算符：1234567+ 加- 减* 乘/ 除% 取余// 求整** 求幂 加减乘除和数学中的一样123456789101112131415161718192021222324+：求和 print(1 + 2) # 3print(2 + 3) # 5-:减result = 5 - 4 # 1*:乘print(2 * 10) # 20/:除 res = 10 / 5 # 2%：取余，小数和整数都能求余数print(6 % 5) # 1print(5 % 0.2) # 0//:求整(求商取整数部分)print(5 // 3) # 1print(6 // 3) # 2print(5 // 6) # 0print(6.4 // 2) # 3**:幂运算：求幂print(x ** y) x^y 得x的y次方 小技巧，可以把y值设置为1/2(0.5)达到开平方作用2. 比较运算符: &gt; &lt; = != &gt;= &lt;=比较运算的结果是布尔值：True 或者False==:判断左右两边的值是否相等，=:将右边的值赋给左边的变量1234567print(1 &gt; 2) #Falseprint(2 &lt; 3) #Trueprint(1 != 2) #Trueprint(1 &lt;= 2) #Trueprint(2 &gt;= 1) #Truenum = 10print(num == 10) #True 3. 逻辑运算符:逻辑运算符的结果都是布尔值，运算对象也必须是布尔值123and 与or 或not 非 a. 值1 and 值2：两个都为True,结果才为True，否则为False123456print("===========================")print(True and True) #Trueprint(True and False) #Falseprint(False and True) #Falseprint(False and False) #Falseprint("===========================") 练习:设置获得奖学金的条件：绩点在3.5以上，并且操评分高于90123grade = 2.8score = 95print((grade &gt; 3.5) and (score &gt; 90)) # False 什么时候使用and：要求多个条件同时满足的时候使用and连接b. 值1 or 值2:两个都为False的时候结果才为False，否则为True123456print("===========================")print(True or True) #Trueprint(True or False) #Trueprint(False or True) #Trueprint(False or False) #Falseprint("===========================") 练习：是否穿毛衣 温度低于20度或者风速高于五级123temperature = 22wind_speed = 6print((temperature &lt; 20) or (wind_speed &gt; 5)) # True 什么时候使用or：要求多个条件中只要有一个条件满足c. not 值 让值取反，True变False，False变True12print(not True)print(not False) 条件：年龄不大于18123age = 18print(age &lt;= 18)print(not age &gt; 18) 4. python中的and和or会有短路现象and的短路现象：值1 and 值2 值1为真就返回值2，值1为假，返回值1or的短路现象：值1 or 值2 值1为真，返回值1，值1位假，返回值2不加括号的情况下，and的优先级要高于or12print(5 and 4 or 1 and 3) # 4print(5 and (4 or 1) and 3) # 3 5. 赋值运算符，先算右边的结果，然后再赋值给左边的变量123456789101112= 等于+= 加等于-= 减等于*= 乘等于/= 除等于%= 取余等于//= 整除等于**= 求幂等于# 100 = 100 报错 SyntaxError:can't assign to literalresult = 10 &gt; 10print(result) = 是单纯将右边的值赋给左边+= -= *= /= %= //= **= 要求左边的变量本身有值123num1 = 100num1 += 1 #相当于：num1 = num1 + 1 依次类推print(num1) # 101 6. 运算符的优先级数学运算符 &gt; 比较运算符 &gt; 逻辑运算符 &gt; 赋值运算符数学运算符 * &gt; / // % &gt; + -逻辑运算符 没有括号的情况下and &gt; or先算优先级搞得，如果优先级相等就依次运算]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F11%2F19%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
  <entry>
    <title><![CDATA[databese基础]]></title>
    <url>%2F2018%2F11%2F19%2F1120-01DB%2F</url>
    <content type="text"><![CDATA[数据库 - 数据的仓库关系型数据库 - 数据持久化 - 管理数据 - 方便的检索数据a.理论基础：集合论、关系代数b.表象：用二维表存储数据 行 - row - 记录 列 - column - 字段 - 数据类型 主键列 - primary key - 唯一标识的一条记录 c.有自己的编程语言 - 结构化查询语言 SQLDB - 数据库DBMS - 数据库管理系统DBA - database administratorDBS - database system = DB + DBMS + DBA 硬件 软件 人件 关系型数据库产品： 1.Oracle 2.MySQL - 服务器+客户端工具 - C/S应用模式 - Client/Server 浏览器一般是B/S模式browser/server 3.微软 - SQL Server 4.IBM - DB2s 5.PostgreSQL redis - 键值对数据库 MongoDB - 文档数据库 ElasticSearch/Solr - 收缩引擎​ 中文编码 ASCII - 128 英语 GB2312 - 6000+ GBK - 20000+ GB18030 - 还收录了少数民族文字​ \u4e00 - \u9fa5 虚拟机 - 模拟器重量级 VMWare Virtual Box Partallel Desktop 轻量级 - 轻量级容器 Docker linux安装Docker1.安装Docker yum -y install docker -io 2.启动Docker systemctl start docker 3.下载MySQL官方镜像(安装盘) docker pull mysql:5.7 查看镜像 - dacker images 4.创建容器运行mysql docker run -d -p 3306:3306 –name mysql57 -e MYSQL_ROOT_PASSWORD=123456 mysql:5.7 windows系统启动MySQL服务器 1.Win+R -&gt; 运行 2.services.msr -&gt; 服务 3.MySQL -&gt; 启动 net start mysql 通过客户端程序连接服务器 字符集显示 开始菜单 - MySQL - MySQL Client Program 图形化客户端 Navicat for MySQL - 猫 SQLyog - 海豚 Toad for MySQL - 蟾蜍 数据库结构化查询语言SQL: Structured Query Language - 结构化查询语言 - 不区分大小写 DDL: Data Definition Language - 数据定义语言 - create(创建) / drop(删除) / alter(修改) DML：Data Manipulation Language - 数据操作语言 - insert/delete/update(更新修改)/select DCL: Date Control Language - 数据控制语言 - grant(授权)/revoke(召回权限)/commit/rollback 做一个学生选课系统 如果存在名为school的数据库就删除1drop database if exists school; 创建数据库school,并设置默认字符集为utf81create database school default charset utf8; 切换到school数据库(切换上下文环境)1use school; 创建学生表，名为tb_student 定义学生表的列，按照公司的命名规范12345678910drop table if exists tb_student;create table tb_student(stuid int not null comment '创建学号，int型 ，not null是非空约束 comment里面是注释',stuname varchar(31) not null comment 'varchar是可变字符串，var是字符串，()里面的是长度',sex enum('男', '女') default '男' comment '性别，双引号和单引号没有区别',stubirth date comment '出生日期',stuaddr varchar(255) comment '家庭住址，255其实占据256字符，有一个字符串结束字符',primary key(stuid)); 修改tb_student表的表结构，增加一个联系方式1alter table tb_student add column stutel char(11) comment "添加手机号，增加一个列，固定字符11"; 修改tb_student表的表结构，删除一个列1alter table tb_student drop column stutel; 修改tb_student表结构1alter table tb_student change column stuname stuname varchar(20) not null comment "姓名" 创建课程tb_course(cid, cname, credit, cdate)1drop table if exists tb_course; 创建tb_course12345678create table tb_course(cid int not null comment '课程id',cname varchar(31) not null comment '课程名称',credit tinyint unsigned not null comment '课程学分',cdate timestamp default now() comment '开课时间',primary key(cid)); 录入数据,往tb_student中添加学生123456insert into tb_student values(1001, '骆昊', default, '1980-11-28', '四川成都');insert into tb_student (stuid, stuname, stubirth) values(1002, '王大锤', '1990-2-2');insert into tb_student (stuid, stuname, sex) values(1003, '赵云', default),(1004, '花木兰', '女'),(1005, '瑞文', '女'); 录入数据，给tb_course中添加五个课程123456insert into tb_course (cid, cname, credit) values(101, '微观经济学', 3),(102, '宏观经济学', 3),(103, '投资学', 3),(104, '金融市场学', 3),(105, '审计', 3); 删除记录 delete from tb_student； 删除全表 &lt;&gt;表示不相等 truncate table tb_student; 删除全表123delete from tb_student where stuid=1002;delete from tb_student where stuid&lt;1004;delete from tb_student where stuid between 1001 and 1005; 更新记录12345678update tb_student set stubirth='2000-2-2' where stuid='1004';update tb_student set stuaddr='召唤师峡谷' where stuid='1004';update tb_student set stubirth='2000-1-1' where stuid='1005';update tb_course set credit=5 where cid=103;update tb_course set credit=8 where cid in ('102', '104');update tb_course set credit=20 where cid=101 or cid=105; 查询记录12select * from tb_student where stuid='1001';select * from tb_student where stuid in (1001, 1002, 1003); 投影1select stuid, stuname, sex from tb_student; 投影 + 别名 as 可以省略12345select stuid as 学号, stuname as 姓名, sex as 性别 from tb_student;select stuid as 学号, stuname as 姓名, sex as 性别 from tb_student where sex='男';select stuname 姓名, stubirth 生日 from tb_student where stubirth&gt;'2000-0-0'; 查询家庭住址为空的学生的姓名和性别123select stuname 姓名, sex 性别, stubirth 生日 from tb_student where stuaddr is null;select stuname 姓名, sex 性别, stubirth 生日 from tb_student where stuaddr is not null; 集合运算 in not in短路运算 and or not 1234567insert into tb_student values (1006, '楚花风', default, null, null);-- 模糊查询 like 查询姓花的人 %是通配符，可以是0或者多个select * from tb_student where stuname like '花%';-- _表示精确匹配一个字符 __表示后面精确匹配两个字符select * from tb_student where stuname like '花__' or stuname like '_文';select * from tb_student where stuname like '%花%'; 12345678910111213141516171819202122-- 查询后再排序 order by stuid 默认为 asc升序 desc为降序select * from tb_student order by stuid desc;-- 排序以姓名字符排select * from tb_student order by stuname asc;-- 排序第一关键字性别，第二关键字学号升序select * from tb_student order by sex, stuid asc;-- 以学号降序排序，查询前三条select * from tb_student order by stuid desc limit 3;-- 跳过三条记录查询三条记录 分页查询select * from tb_student order by stuid desc limit 3 offset 5;-- 和上相同，但是不足时都会保留三条，跳过2取4select * from tb_student order by stuid limit 2,4;insert into tb_student values (1007, "Lee", default, '1990-1-1', null);-- 从姓名的第一个字符取取一个字符select substr(stuname, 1, 1) from tb_student;-- 去重select distinct substr(stuname, 1, 1) from tb_student;select substr(stuname, 2, length(stuname)) from tb_student;select concat(stuname, '000') from tb_student; 聚合函数 实现统计功能123456789101112-- 求最大的学分select max(credit) from tb_course;-- 求最小的学分select min(credit) from tb_course;-- 求学分总和select sum(credit) from tb_course;-- 求平均学分select avg(credit) from tb_course;-- 求有多少种学分 求有多少门课程select count(credit) from tb_course;-- 求有多少学生select count(stuid) from tb_student; 分组查询123select sex, count(stuid) from tb_student group by sex;-- where group by order by limit offsetselect credit, count(cid) from tb_course group by credit; 123456789101112131415161718drop user 'eryang'@'%'drop user 'eryang'@'local'-- 创建用户-- localhost表示只能本地登录，不能网络访问-- create user 'wangdachui'@'10.7.156.17' 表示这个用户只能从这个Ip登录-- create user 'wangdachui'@'%' 表示从哪里都可以登录create user 'eryang'@'local' identified by '123456'create user 'eryang'@'%' identified by '123456'-- 授权操作 grant to 末尾加上with grant option 还可以再次授权grant all privileges on *.* to 'eryang'@'%';revoke all privileges on school.* from 'eryang'@'%';grant select on school.* to 'eryang'@'%';grant insert on school.* to 'eryang'@'%';grant all privileges on school.* to 'eryang'@'%'; 表与表之间的关系 一对一的关系 (人和身份证) 一对多的关系 (人和银行卡) 多对多的关系 (学生和课程、订单和商品之间) 外键：外来的主键，其他表中是主键，本表是外键 学生 课程 学院 老师]]></content>
  </entry>
</search>
